{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>This is your homepage!</p>"},{"location":"cppBasics/","title":"Welcome to cppBasics","text":"<p>This is your homepage!</p>"},{"location":"cppBasics/vmdoc/util_js.hpp_a97aab/","title":"/util_js.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppBasics/vmdoc/util_std.hpp_67d6bb/","title":"Util std.hpp 67d6bb","text":"<p>title: /util_std.hpp source_file: /util_std.hpp description: Contains documentation for how to do some things using the standard library: Everything should be supported in C++11 and newer versions across most major platforms(Windows, Linux, Browser using emscripten) generated_from: vmdoc source_code_file: util_std.hpp_67d6bb.txt</p> <p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppBasics/vmdoc/util_std_bonus.hpp_8462c7/","title":"/util_std_bonus.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppBasics/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li> <p>/util_js.hpp - Contains some functionality targetted at c++ when compiling for the browser</p> </li> <li> <p>/util_std_bonus.hpp - Extends util_std.hpp with even more functionality</p> </li> <li> <p>/util_std.hpp - Contains documentation for how to do some things using the standard library: Everything should be supported in C++11 and newer versions across most major platforms(Windows, Linux, Browser using emscripten)</p> </li> </ul>"},{"location":"cppBinPacking/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppBinPacking/vmdoc/util_bin_packing.hpp_9f5ab1/","title":"/util_bin_packing.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppBinPacking/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/util_bin_packing.hpp - Pack 2d rectangels inside a larger 2d rectangle, so they do not overlap.</li> </ul>"},{"location":"cppBuild/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppBuild/vmdoc/_init_.py_b76991/","title":"/__init__.py","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppBuild/vmdoc/_init_.py_b76991/#buildsetup","title":"BuildSetup","text":"<p>Used for building projects in c++ The build setup is a specification for how to build a c++ project, you can merge one build setup with another build setup, to form a combined build setup, this way you can merge different libraries build setup. </p> <p>Since it is python, you do not need additional dependencies such as cmake, and it is  really easy to run projects, just run the python file :)</p>"},{"location":"cppBuild/vmdoc/_init_.py_b76991/#usage","title":"Usage","text":"<p>The basic idea is just to allow adding compiler arguments, where they are later put in an order so they compile correctly The different types of arguments are the following, where the n# symbolizes in which order they will appear in the build command</p> <ul> <li>n1_compiler_path: str # Which compiler to use, defualts to g++ if browser=false, otherwise em++</li> <li>n2_cpp_files: List[str] # Paths to cpp files, i.e. [\"/some/path/main.cpp\", \"some/path/other.cpp\"]</li> <li>n3_optimization_level: List[str] # Additional optimization flags, can also be used to specify c++ version</li> <li>n4_macros: List[str] # Macros to include, will automatically get a -D flag</li> <li>n5_additional_compiler_settings: List[str] # Additional compiler settings, you need to specify the flag</li> <li>n6_include_paths: List[str] # Include paths, will automatically get a -I flag</li> <li>n7_library_paths: List[str] # Library paths, will automatically get a -L flag</li> <li>n8_library_files: List[str] # Library files, will automatically get a -l flag</li> <li>n9_output_file: str # Path to the file where the binary will go, typically bin/run.exe or bin/run.out or bin/run.html depending on configuration</li> </ul> <p>Finally you can also specify if you want the system to build for the browser or not(i.e. compile using emscripten)</p> <ul> <li>browser_flag: bool</li> </ul>"},{"location":"cppBuild/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/init.py - </li> </ul>"},{"location":"cppEmsdk/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppEmsdk/vmdoc/setup.py_57ea57/","title":"/setup.py","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppEmsdk/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/setup.py - Utility functions for installing emscripten, which is a compiler to compile c++ code for the web</li> </ul>"},{"location":"cppGlm/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppGlm/vmdoc/util_glm.hpp_52de52/","title":"/util_glm.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppGlm/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/util_glm.hpp - Includes glm, which is a library that can be used for linear algebra and math</li> </ul>"},{"location":"cppMiniz/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppMiniz/vmdoc/util_miniz.hpp_cc2125/","title":"/util_miniz.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppMiniz/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/util_miniz.hpp - Includes miniz, a library that can be used to work with zip files in c++</li> </ul>"},{"location":"cppOpengl/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppOpengl/vmdoc/util_opengl.hpp_f5dc61/","title":"/util_opengl.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppOpengl/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/util_opengl.hpp - Include opengl and sdl, and add a number of utility functions and classes</li> </ul>"},{"location":"cppStb/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppStb/vmdoc/util_stb.hpp_eaf7b9/","title":"/util_stb.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppStb/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li>/util_stb.hpp - Includes stb, a library used for loading images(such as .png) and fonts</li> </ul>"},{"location":"cppVicmilGui/","title":"Welcome to My Docs","text":"<p>This is your homepage!</p>"},{"location":"cppVicmilGui/vmdoc/util_vicmil_gui.hpp_568773/","title":"/util_vicmil_gui.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppVicmilGui/vmdoc/util_vicmil_gui_bonus.hpp_3a8534/","title":"/util_vicmil_gui_bonus.hpp","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"cppVicmilGui/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li> <p>/util_vicmil_gui_bonus.hpp - extends util_vicmil_gui.hpp with even more functionality, such as a number of default widgets</p> </li> <li> <p>/util_vicmil_gui.hpp - Handle multiple images on a single texture, implement widget manager</p> </li> </ul>"},{"location":"pyMkDocs/","title":"pyMkDocs","text":"<p>Automatically generate documentation using mkDocs</p>"},{"location":"pyMkDocs/vmdoc/_init_.py_b76991/","title":"/__init__.py","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"pyMkDocs/vmdoc/_init_.py_b76991/#vicmil_generate_project_documentation","title":"vicmil_generate_project_documentation","text":"<p>Specify directory to look for source files, and where you want docs directory Then it automatically generates the documentation for you</p> <pre><code>def vicmil_generate_project_documentation(docs_dir: str, src_dir: str) -&gt; None\n</code></pre> <p>Example <pre><code>from vicmil_pip.packages.pyMkDocs import *\n\n# The path where the documentation will be stored\ndocs_dir = get_directory_path(__file__) + \"/docs\"\n\n# The path where to look for files with documentation\nsrc_dir = get_directory_path(__file__, 2)\n\nvicmil_generate_project_documentation(docs_dir, src_dir)\n</code></pre></p> <p>[OPTIONAL]: You can also specify what files you want to include/exclude using syntax like .gitignore</p> <pre><code>from vicmil_pip.packages.pyMkDocs import *\n\n# The path where the documentation will be stored\ndocs_dir = get_directory_path(__file__) + \"/docs\"\n\n# The path where to look for files with documentation\nsrc_dir = get_directory_path(__file__, 2)\n\n# The files to include\ngitignore_content = \\\"\"\"\n        # Exclude everything by default\n        *\n\n        # Include code files\n        !*.py\n        !*.cpp\n        !*.h\n        !*.hpp\n        !*.java\n        !*.js\n\n        # Exclude directories\n        venv/*\n        node_modules/*\n        build/*\n        dist/*\n\n        # Exclude specific log files\n        *.log\n        *.tmp\n        \\\"\"\"\n\nvicmil_generate_project_documentation(docs_dir, src_dir, gitignore_content)\n</code></pre>"},{"location":"pyMkDocs/vmdoc/init.py_743b1a/","title":"__init__.py","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"pyMkDocs/vmdoc/init.py_743b1a/#vicmil_generate_project_documentation","title":"vicmil_generate_project_documentation","text":"<p>Specify directory to look for source files, and where you want docs directory Then it automatically generates the documentation for you</p> <pre><code>def vicmil_generate_project_documentation(docs_dir: str, src_dir: str) -&gt; None\n</code></pre> <p>Example <pre><code>from vicmil_pip.packages.pyMkDocs import *\n\n# The path where the documentation will be stored\ndocs_dir = get_directory_path(__file__) + \"/docs\"\n\n# The path where to look for files with documentation\nsrc_dir = get_directory_path(__file__, 2)\n\nvicmil_generate_project_documentation(docs_dir, src_dir)\n</code></pre></p> <p>[OPTIONAL]: You can also specify what files you want to include/exclude using syntax like .gitignore</p> <pre><code>from vicmil_pip.packages.pyMkDocs import *\n\n# The path where the documentation will be stored\ndocs_dir = get_directory_path(__file__) + \"/docs\"\n\n# The path where to look for files with documentation\nsrc_dir = get_directory_path(__file__, 2)\n\n# The files to include\ngitignore_content = \\\"\"\"\n        # Exclude everything by default\n        *\n\n        # Include code files\n        !*.py\n        !*.cpp\n        !*.h\n        !*.hpp\n        !*.java\n        !*.js\n\n        # Exclude directories\n        venv/*\n        node_modules/*\n        build/*\n        dist/*\n\n        # Exclude specific log files\n        *.log\n        *.tmp\n        \\\"\"\"\n\nvicmil_generate_project_documentation(docs_dir, src_dir, gitignore_content)\n</code></pre>"},{"location":"pyMkDocs/vmdoc/vmdoc.py_99ab01/","title":"/include/vmdoc.py","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"pyMkDocs/vmdoc/vmdoc.py_e1bc44/","title":"include/vmdoc.py","text":"<p>\ud83d\udcc4 View raw source code</p>"},{"location":"pyMkDocs/vmdoc/vmdocs/","title":"Vmdoc Overview","text":"<p>This document lists all the generated documentation files.</p> <ul> <li> <p>/init.py - The init file with instructions for how to use the library</p> </li> <li> <p>/include/vmdoc.py - Automatically generate .md files using tags inside of files</p> </li> </ul>"}]}